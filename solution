const TAB_ID = Date.now() + '_' + Math.random();
const LEADER_KEY = 'tab-leader-id';
const PING_KEY = 'tab-check-ping-' + TAB_ID;
const RESPONSE_KEY = 'tab-check-response-' + TAB_ID;

let isDuplicate = false;

// Attempt to become the leader if there's no current leader
if (!localStorage.getItem(LEADER_KEY)) {
  localStorage.setItem(LEADER_KEY, TAB_ID);
}

// Function to check if we're the leader
function isMainTab() {
  return localStorage.getItem(LEADER_KEY) === TAB_ID;
}

// Ping other tabs
localStorage.setItem(PING_KEY, 'ping');

// Handle storage events
window.addEventListener('storage', (e) => {
  // 1. Another tab pinged
  if (e.key && e.key.startsWith('tab-check-ping-')) {
    const newTabId = e.key.substring('tab-check-ping-'.length);
    const newTabResponseKey = 'tab-check-response-' + newTabId;

    // If we're the main tab, respond
    if (isMainTab()) {
      alert('🚨 A duplicate tab has been opened.');
      localStorage.setItem(newTabResponseKey, 'duplicate');
    }
  }

  // 2. If we are the duplicate tab and receive a response
  if (e.key === RESPONSE_KEY && e.newValue === 'duplicate') {
    isDuplicate = true;
    console.log('⚠️ This is a duplicate tab.');
    submitHiddenForm();
  }

  // 3. Conflict from another tab
  if (e.key && e.key.startsWith('tab-conflict-')) {
    alert('⚠️ A duplicate tab caused a conflict (409). You may want to close that tab.');
  }

  // 4. Leader tab closed (optional: elect a new leader)
  if (e.key === LEADER_KEY && e.oldValue === TAB_ID) {
    console.warn('🔁 Leader tab was closed or refreshed.');
  }
});

// Final check
setTimeout(() => {
  if (!isDuplicate) {
    if (isMainTab()) {
      console.log('✅ This is the main tab.');
    } else {
      console.log('⚠️ This tab is not the leader but received no duplicate notice.');
    }
  }
}, 300);

// Simulate 409 conflict in duplicate tab
window.addEventListener('load', () => {
  if (isDuplicate) {
    setTimeout(() => {
      const conflictKey = 'tab-conflict-' + TAB_ID;
      localStorage.setItem(conflictKey, '409');
    }, 1000);
  }
});

// Submit hidden form
function submitHiddenForm() {
  const form = document.createElement('form');
  form.style.display = 'none';
  form.method = 'POST';
  form.action = '/submit-duplicate'; // Replace with your real endpoint
  document.body.appendChild(form);
  form.submit();
}
