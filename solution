const MAIN_TAB_KEY = 'main-tab-id';
const TAB_ID = Date.now() + '_' + Math.random();
const PING_KEY = 'tab-check-ping-' + TAB_ID;
const RESPONSE_KEY = 'tab-check-response-' + TAB_ID;
const CONFLICT_KEY = 'tab-conflict-' + TAB_ID;

let isDuplicate = false;

// 1. Set ourselves as main tab only if no main-tab-id exists
if (!localStorage.getItem(MAIN_TAB_KEY)) {
  localStorage.setItem(MAIN_TAB_KEY, TAB_ID);
  console.log('✅ This is the main tab (assigned).');
} else {
  console.log('⏳ Main tab already exists. Checking if we are duplicate...');
  // We ping to see if other tabs are active
  localStorage.setItem(PING_KEY, 'ping');
}

// 2. Handle storage events
window.addEventListener('storage', (e) => {
  // Another tab pinged — respond if we are main
  if (
    e.key &&
    e.key.startsWith('tab-check-ping-') &&
    localStorage.getItem(MAIN_TAB_KEY) === TAB_ID
  ) {
    const newTabId = e.key.substring('tab-check-ping-'.length);
    const responseKey = 'tab-check-response-' + newTabId;

    alert('🚨 A duplicate tab has been opened.');
    localStorage.setItem(responseKey, 'duplicate');
  }

  // We received a response, so we are a duplicate
  if (e.key === RESPONSE_KEY && e.newValue === 'duplicate') {
    isDuplicate = true;
    console.warn('⚠️ This is a duplicate tab. Submitting hidden form...');

    // Submit hidden form
    submitHiddenForm();

    // Notify main tab of conflict (e.g. 409)
    setTimeout(() => {
      localStorage.setItem('tab-conflict-' + localStorage.getItem(MAIN_TAB_KEY), '409');
    }, 1000); // Simulate conflict
  }

  // If we are main and receive a conflict alert
  if (
    e.key &&
    e.key === 'tab-conflict-' + TAB_ID &&
    localStorage.getItem(MAIN_TAB_KEY) === TAB_ID
  ) {
    alert('⚠️ A duplicate tab caused a conflict.');
  }
});

// Fallback confirmation after brief delay
setTimeout(() => {
  if (!isDuplicate && localStorage.getItem(MAIN_TAB_KEY) === TAB_ID) {
    console.log('✅ Confirmed: This is the main tab.');
  }
}, 300);

// Hidden form logic (only for duplicate tabs)
function submitHiddenForm() {
  const form = document.createElement('form');
  form.style.display = 'none';
  form.method = 'POST';
  form.action = '/submit-duplicate'; // Use your real endpoint
  document.body.appendChild(form);
  form.submit();
}
