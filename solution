const TAB_ID = Date.now() + '_' + Math.random();
const PING_KEY = 'tab-check-ping-' + TAB_ID;
const RESPONSE_KEY = 'tab-check-response-' + TAB_ID;

let isDuplicate = false;

// Ping other tabs to check if this is a duplicate
localStorage.setItem(PING_KEY, 'ping');

// Handle storage events
window.addEventListener('storage', (e) => {
  // 1. Another tab pinged
  if (e.key && e.key.startsWith('tab-check-ping-')) {
    const newTabId = e.key.substring('tab-check-ping-'.length);
    const newTabResponseKey = 'tab-check-response-' + newTabId;

    // Only respond if this is NOT the tab that just pinged (i.e., not the new tab itself)
    if (newTabId !== TAB_ID) {
      // Show alert on main tab
      alert('üö® A duplicate tab has been opened.');

      // Send response back to duplicate tab
      localStorage.setItem(newTabResponseKey, 'duplicate');
    }
  }

  // 2. If we are the duplicate tab and receive a response
  if (e.key === RESPONSE_KEY && e.newValue === 'duplicate') {
    // Only the duplicate tab should run this logic for itself
    if (!isDuplicate) {
      isDuplicate = true;
      console.log('‚ö†Ô∏è This is a duplicate tab.');
      submitHiddenForm();
    }
  }

  // 3. Main tab is notified that a conflict happened in the duplicate
  if (e.key && e.key.startsWith('tab-conflict-')) {
    const dupTabId = e.key.substring('tab-conflict-'.length);

    // Only alert if this is NOT the duplicate tab
    if (dupTabId !== TAB_ID) {
      alert('‚ö†Ô∏è A duplicate tab caused a conflict (409). You may want to close that tab.');
    }
  }
});

// Check after brief timeout to confirm if this is the main tab
setTimeout(() => {
  if (!isDuplicate) {
    console.log('‚úÖ This is the main tab.');
    // Main tab will never submit the form!
  }
}, 300);

// ‚ûï Simulate 409 response in duplicate tab after form submission
window.addEventListener('load', () => {
  if (isDuplicate) {
    // Simulate 409 response using a timeout (replace with real check if needed)
    setTimeout(() => {
      console.warn('‚ö†Ô∏è Simulating 409 conflict due to duplicate tab.');
      const conflictKey = 'tab-conflict-' + TAB_ID;
      localStorage.setItem(conflictKey, '409');
    }, 1000);
  }
});

// üîí Hidden form submit logic
function submitHiddenForm() {
  const form = document.createElement('form');
  form.style.display = 'none';
  form.method = 'POST';
  form.action = '/submit-duplicate'; // Replace with your real endpoint
  document.body.appendChild(form);
  form.submit();
}
